-# app/views/segments/easy_targets.html.haml
- if @error
  %p{style: "color: red; font-weight: bold;"}= @error

- if @max_pace.present?
  %p Filtering: KOM pace ≥ #{@max_pace} min/km

- if @segments.any?
  .results-filters
    %label
      %input{type: "checkbox", id: "filter-done", onchange: "filterSegments()"} Show only done segments
    %label
      %input{type: "checkbox", id: "filter-favorited", onchange: "filterSegments()"} Show only favorited segments
    %button{onclick: "clearFilters()", class: "btn btn-clear"} Clear Filters
  
  :javascript
    function filterSegments() {
      console.log('Filter function called');
      const filterDone = document.getElementById('filter-done');
      const filterFavorited = document.getElementById('filter-favorited');
      const table = document.getElementById('segments-table');
      
      if (!table) {
        console.log('Table not found');
        return;
      }
      
      const showDoneOnly = filterDone.checked;
      const showFavoritedOnly = filterFavorited.checked;
      const rows = table.querySelectorAll('tbody tr');
      
      console.log('Filtering with:', { showDoneOnly, showFavoritedOnly, rowCount: rows.length });
      
      rows.forEach((row, index) => {
        const doneAttr = row.getAttribute('data-done');
        const favoritedAttr = row.getAttribute('data-favorited');
        const isDone = doneAttr === 'true' || (doneAttr === '' && doneAttr !== null);
        const isFavorited = favoritedAttr === 'true' || (favoritedAttr === '' && favoritedAttr !== null);
        
        console.log(`Row ${index}:`, { doneAttr, favoritedAttr, isDone, isFavorited });
        
        let showRow = true;
        
        if (showDoneOnly && !isDone) {
          showRow = false;
        }
        if (showFavoritedOnly && !isFavorited) {
          showRow = false;
        }
        
        row.style.display = showRow ? '' : 'none';
        console.log(`Row ${index} display:`, row.style.display);
      });
    }
    
    function clearFilters() {
      console.log('Clear filters called');
      const filterDone = document.getElementById('filter-done');
      const filterFavorited = document.getElementById('filter-favorited');
      const table = document.getElementById('segments-table');
      
      if (filterDone) filterDone.checked = false;
      if (filterFavorited) filterFavorited.checked = false;
      
      if (table) {
        const rows = table.querySelectorAll('tbody tr');
        rows.forEach(row => {
          row.style.display = '';
        });
      }
    }
  
  %table{id: "segments-table"}
    %thead
      %tr
        %th= sortable_link('name', 'Name')
        %th= sortable_link('distance', 'Distance')
        %th= sortable_link('kom_pace', 'KOM Pace')
        %th= sortable_link('ratio', 'Ratio')
        %th= sortable_link('distance_from_search', 'Distance from Search')
        %th Actions
    %tbody
      - @segments.each do |seg|
        %tr{class: seg[:background_color_class], "data-done" => seg[:is_done] ? "true" : "false", "data-favorited" => seg[:is_favorited] ? "true" : "false"}
          %td= link_to seg[:name], "https://www.strava.com/segments/#{seg[:id]}", target: "_blank"
          %td= "#{seg[:distance]}m"
          %td= "#{format_pace(seg[:kom_pace])} min/km"
          %td= "#{(seg[:difficulty_ratio] * 100).round}%"
          %td
            - if seg[:distance_from_search]
              = "#{seg[:distance_from_search].round(2)} km"
            - else
              %span{style: "color: grey;"} N/A
          %td
            .segment-actions
              %button{class: "btn btn-done #{'active' if seg[:is_done]}", title: "Mark as Done", onclick: "markSegment('#{seg[:id]}', 'done')"} ✓
              %button{class: "btn btn-favorite #{'active' if seg[:is_favorited]}", title: "Mark as Favorite", onclick: "markSegment('#{seg[:id]}', 'favorited')"} ★
              %button{class: "btn btn-unavailable #{'active' if seg[:is_unavailable]}", title: "Mark as Unavailable", onclick: "markSegment('#{seg[:id]}', 'unavailable')"} ✗
              %button{class: "btn btn-primary", title: "Refresh KOM", onclick: "refreshKom('#{seg[:id]}')"} Refresh KOM
- elsif !@error
  %p No segments found matching your criteria.