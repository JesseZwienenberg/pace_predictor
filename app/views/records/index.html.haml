- content_for(:title, "Personal Records - Running Experts")

%h1 Personal Records

%div.chart-container{style: "width: 80%; margin: 20px auto;"}
  %canvas#recordsChart

%table.records-table
  %thead
    %tr
      %th Distance
      %th Time
      %th Pace (/km)
      %th Pace (km/h)
      %th Date
      %th Activity
  %tbody
    - @personal_records.each do |distance_name, record|
      %tr
        %td= distance_name
        %td= format_time(record[:time])
        %td= format_pace(record[:pace])
        %td= "#{grey_decimals(pace_to_kmph(record[:pace]))}"
        %td= record[:date].strftime("%m/%d/%Y")
        %td= link_to record[:activity].name, activity_path(record[:activity])

.actions
  = link_to "‚Üê Back to Activities", activities_path, class: "btn"

:javascript
  document.addEventListener('turbo:load', function() {
    // Only create chart if canvas exists and chart hasn't been created yet
    const canvas = document.getElementById('recordsChart');
    if (!canvas) return;

    // Destroy existing chart if it exists to prevent duplicates
    if (canvas.chart) {
      canvas.chart.destroy();
    }

    const ctx = canvas.getContext('2d');
    const recordsData = #{@chart_data.to_json.html_safe};

    canvas.chart = new Chart(ctx, {
      type: 'line',
      data: {
        datasets: [{
          label: 'Personal Best Pace',
          data: recordsData,
          backgroundColor: 'rgba(54, 162, 235, 0.8)',
          borderColor: 'rgba(54, 162, 235, 1)',
          borderWidth: 2,
          pointRadius: 6
        }]
      },
      options: {
        responsive: true,
        scales: {
          x: {
            type: 'linear',
            title: {
              display: true,
              text: 'Distance (km)'
            },
            beginAtZero: true
          },
          y: {
            type: 'linear',
            beginAtZero: true,
            title: {
              display: true,
              text: 'Pace (min/km)'
            },
            ticks: {
              callback: function(value) {
                const minutes = Math.floor(value);
                const seconds = Math.floor((value % 1) * 60);
                return `${minutes}:${seconds.toString().padStart(2, '0')}`;
              }
            }
          }
        },
        plugins: {
          title: {
            display: true,
            text: 'Personal Best Pace by Distance'
          },
          tooltip: {
            callbacks: {
              title: function(context) {
                return recordsData[context[0].dataIndex].label;
              },
              label: function(context) {
                const minutes = Math.floor(context.parsed.y);
                const seconds = Math.floor((context.parsed.y % 1) * 60);
                return `Pace: ${minutes}:${seconds.toString().padStart(2, '0')}`;
              }
            }
          }
        }
      }
    });
  });